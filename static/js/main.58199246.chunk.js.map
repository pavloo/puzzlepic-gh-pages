{"version":3,"sources":["components/Board.js","components/Img.js","components/Puzzle.js","components/PuzzlePiece.js","App.js","serviceWorker.js","index.js"],"names":["styled","div","_templateObject","Img","onLoad","event","_event$target","target","width","height","_this","props","onUpdateDimensions","react_default","a","createElement","className","this","src","alt","Component","HiddenImg","Img_templateObject","PuzzleRow","Puzzle_templateObject","PATTERN","hole","nub","none","counter","findPieceById","pieces","id","i","length","res","find","piece","findPiecesByClusterId","clusterId","result","filter","cluster","concat","findMin","prop","reduce","acc","findMax","Puzzle","_getPrototypeOf2","Object","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","_ref","_this$props","piecesX","piecesY","pieceWidth","pieceHeight","scale","calculateScale","piecesArray","MARGIN","x","y","top","realWidth","realHeight","left","push","url","imageUrl","pattern","bottom","right","neighbours","approX","approY","beginMouseMove","setState","puzzle","row","j","newI","random","newJ","temp","shufflePuzzle","buildPattern","onMove","_ref2","deltaX","deltaY","state","_checkForNeighbours","clusters","newDeltaX","newDeltaY","current","newCluster","directions","_loop","direction","has","neigh","xDelta","yDelta","Math","abs","v","_ret","checkForNeighbours","_checkForNeighbours2","slicedToArray","clusterPieces","minLeft","minTop","minBottom","minRight","checkForEdges","containerRef","offsetWidth","window","innerHeight","hitEdge","objectSpread","zIndex","forEach","p","isWinner","hasWon","onWin","prevClusterId","onFinishMove","_ref3","renderRows","isEmpty","map","key","render","React","createRef","containerHeight","containerWidth","innerWidth","arr","CASES","bottomNeigbour","rightNeigbour","shuffle","ref","_templateObject2","extractPageXY","pageX","pageY","touches","success","PuzzlePiece","onDocumentMouseMove","onDrag","onMouseDown","_extractPageXY","onMouseUp","onImageLoad","_this$props$piece","ctx","canvasRef","getContext","drawImage","globalCompositeOperation","beginPath","arc","PI","stroke","fill","drawNubs","nubCanvasRefs","keys","document","body","addEventListener","removeEventListener","_extractPageXY2","image","_this$props$piece2","obj","canvas","w","h","style","clip","_this$props$piece3","onTouchStart","PuzzlePiece_templateObject","App","onStartGame","hasStartedGame","preventDefault","handleUrlChange","value","handleDifficultyChange","difficulty","playAgain","react_router_dom","react_router","path","to","onSubmit","type","onChange","Board","components_Puzzle","components_PuzzlePiece","onClick","Boolean","location","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.58199246.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nexport default styled.div`\n  border: 5px solid grey;\n  position: relative;\n  height: 100vh;\n  box-sizing: border-box;\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nexport default class Img extends Component {\n\n  static propTypes = {\n    src: PropTypes.string.isRequired,\n  };\n\n  onLoad = (event) => {\n    const {\n      width,\n      height\n    } = event.target;\n\n    if (this.props.onUpdateDimensions) {\n      this.props.onUpdateDimensions({ width, height });\n    }\n\n    if (this.props.onLoad) {\n      this.props.onLoad(event);\n    }\n  }\n\n  render() {\n    return (\n        <img className={this.props.className} src={this.props.src} onLoad={this.onLoad} alt=\"Cannot load\" />\n    )\n  }\n}\n\nexport const HiddenImg = styled(Img)`\n  display: none;\n`;\n","import React, { Component } from \"react\";\n\nimport styled from \"styled-components\";\nimport { HiddenImg } from \"./Img\";\nimport find from \"lodash/find\";\nimport filter from \"lodash/filter\";\nimport isEmpty from \"lodash/isEmpty\";\nimport random from \"lodash/random\";\nimport shuffle from \"lodash/shuffle\";\n\nconst PuzzleRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n`;\nexport const PATTERN = {\n  hole: 1,\n  nub: 2,\n  none: 0,\n};\n\nlet counter = 2;\n\nfunction findPieceById(pieces, id) {\n  for (let i = 0; i < pieces.length; i++) {\n    let res = find(pieces[i], (piece) => piece.id === id);\n    if (res) return res;\n  }\n}\n\nfunction findPiecesByClusterId(pieces, clusterId) {\n  let result = [];\n\n  for (let i = 0; i < pieces.length; i++) {\n    let res = filter(pieces[i], (piece) => piece.cluster === clusterId);\n    result = result.concat(res);\n  }\n\n  return result;\n}\n\nfunction findMin(pieces, prop) {\n  return pieces.reduce(\n    (acc, piece) => (piece[prop] < acc[prop] ? piece : acc),\n    pieces[0]\n  );\n}\n\nfunction findMax(pieces, prop) {\n  return pieces.reduce(\n    (acc, piece) => (piece[prop] > acc[prop] ? piece : acc),\n    pieces[0]\n  );\n}\n\nfunction checkForEdges(pieces, id, deltaX, deltaY, left, top) {\n  const current = findPieceById(pieces, id);\n  const clusterPieces = findPiecesByClusterId(pieces, current.cluster);\n\n  let minLeft = findMin(clusterPieces, \"left\");\n  let minTop = findMin(clusterPieces, \"top\");\n  let minBottom = findMax(clusterPieces, \"top\");\n  let minRight = findMax(clusterPieces, \"left\");\n\n  if (minLeft.left < 0) {\n    return [minLeft.approX, deltaY, true];\n  }\n\n  if (minTop.top < 0) {\n    return [deltaX, minTop.approY, true];\n  }\n\n  if (minRight.left + minRight.realWidth > left) {\n    return [minRight.approX - left + minRight.realWidth, deltaY, true];\n  }\n\n  if (minBottom.top + minBottom.realHeight > top) {\n    return [deltaX, minBottom.approY - top + minBottom.realHeight, true];\n  }\n\n  return [deltaX, deltaY, false];\n}\n\nfunction checkForNeighbours(pieces, id, clusters, deltaX, deltaY) {\n  const PROXIMITY = 15; // pixels\n  let newDeltaX = deltaX;\n  let newDeltaY = deltaY;\n  let current = findPieceById(pieces, id);\n  let newCluster = current.cluster;\n\n  const directions = [\"left\", \"right\", \"top\", \"bottom\"];\n\n  for (let i = 0; i < directions.length; i++) {\n    const direction = directions[i];\n    current = findPieceById(pieces, id);\n    let temp = findPiecesByClusterId(pieces, current.cluster).find(\n      (piece) =>\n        !piece.neighbours[direction].has && piece.neighbours[direction].id\n    );\n\n    if (!temp) continue;\n\n    current = temp;\n    const neigh = findPieceById(pieces, current.neighbours[direction].id);\n\n    let xDelta, yDelta;\n    switch (direction) {\n      case \"left\":\n        xDelta = current.left - (neigh.left + neigh.realWidth);\n        yDelta = current.top - neigh.top;\n        if (Math.abs(xDelta) > PROXIMITY || Math.abs(yDelta) > PROXIMITY)\n          continue;\n\n        current.neighbours.left.has = true;\n        newDeltaX = current.approX - neigh.left - neigh.realWidth;\n        newDeltaY = current.approY - neigh.top;\n        newCluster = neigh.cluster;\n\n        return [newDeltaX, newDeltaY, newCluster, current];\n      case \"right\":\n        xDelta = neigh.left - (current.left + current.realWidth);\n        yDelta = current.top - neigh.top;\n        if (Math.abs(xDelta) > PROXIMITY || Math.abs(yDelta) > PROXIMITY)\n          continue;\n\n        current.neighbours.right.has = true;\n        newDeltaX = current.approX - neigh.left + neigh.realWidth;\n        newDeltaY = current.approY - neigh.top;\n        newCluster = neigh.cluster;\n\n        return [newDeltaX, newDeltaY, newCluster, current];\n\n      case \"top\":\n        yDelta = current.top - current.realHeight - neigh.top;\n        xDelta = neigh.left - current.left;\n        if (Math.abs(xDelta) > PROXIMITY || Math.abs(yDelta) > PROXIMITY)\n          continue;\n\n        current.neighbours.top.has = true;\n        newDeltaX = current.approX - neigh.left;\n        newDeltaY = current.approY - neigh.top - neigh.realHeight;\n        newCluster = neigh.cluster;\n\n        return [newDeltaX, newDeltaY, newCluster, current];\n\n      case \"bottom\":\n        yDelta = neigh.top - current.top - current.realHeight;\n        xDelta = neigh.left - current.left;\n        if (Math.abs(xDelta) > PROXIMITY || Math.abs(yDelta) > PROXIMITY)\n          continue;\n\n        current.neighbours.bottom.has = true;\n        newDeltaX = current.approX - neigh.left;\n        newDeltaY = current.approY - neigh.top + neigh.realHeight;\n        newCluster = neigh.cluster;\n\n        return [newDeltaX, newDeltaY, newCluster, current];\n    }\n  }\n\n  return [newDeltaX, newDeltaY, newCluster, current];\n}\n\nfunction shufflePuzzle(puzzle) {\n  for (let i = 0; i < puzzle.length; i++) {\n    let row = puzzle[i];\n    for (let j = 0; j < row.length; j++) {\n      let newI = random(puzzle.length - 1);\n      let newJ = random(row.length - 1);\n\n      let top = puzzle[i][j].top;\n      let left = puzzle[i][j].left;\n      puzzle[i][j].top = puzzle[newI][newJ].top;\n      puzzle[i][j].left = puzzle[newI][newJ].left;\n      puzzle[i][j].approX = puzzle[newI][newJ].approX;\n      puzzle[i][j].approY = puzzle[newI][newJ].approY;\n\n      puzzle[newI][newJ].top = top;\n      puzzle[newI][newJ].left = left;\n      puzzle[newI][newJ].approX = left;\n      puzzle[newI][newJ].approY = top;\n\n      let temp = puzzle[i][j];\n      puzzle[i][j] = puzzle[newI][newJ];\n      puzzle[newI][newJ] = temp;\n    }\n  }\n\n  return puzzle;\n}\n\nclass Puzzle extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.state = {\n      width: null,\n      height: null,\n      pieces: [],\n      clusters: {},\n    };\n\n    this.containerRef = React.createRef();\n    this.hasWon = false;\n  }\n\n  calculateScale(height, width) {\n    const containerHeight = window.innerHeight;\n    const containerWidth = window.innerWidth;\n\n    let result = 1;\n    if (width > containerWidth) {\n      result = containerWidth / width;\n    }\n\n    if (height * result > containerHeight) {\n      result = containerHeight / height;\n    }\n\n    return result - 0.2;\n  }\n\n  buildPattern(arr) {\n    const CASES = [PATTERN.nub, PATTERN.hole];\n    for (let i = 0; i < arr.length; i++) {\n      for (let j = 0; j < arr[i].length; j++) {\n        let piece = arr[i][j];\n        let bottomNeigbour;\n        if (arr[i + 1]) {\n          bottomNeigbour = arr[i + 1][j];\n        }\n        let rightNeigbour = arr[i][j + 1];\n        if (rightNeigbour) {\n          const right = shuffle(CASES);\n          piece.pattern.right = right[0];\n          piece.neighbours.right.id = rightNeigbour.id;\n\n          rightNeigbour.pattern.left = right[1];\n          rightNeigbour.neighbours.left.id = piece.id;\n        }\n        if (bottomNeigbour) {\n          const bottom = shuffle(CASES);\n          piece.pattern.bottom = bottom[0];\n          piece.neighbours.bottom.id = bottomNeigbour.id;\n\n          bottomNeigbour.pattern.top = bottom[1];\n          bottomNeigbour.neighbours.top.id = piece.id;\n        }\n      }\n    }\n    return arr;\n  }\n\n  onUpdateDimensions = ({ height, width }) => {\n    const { piecesX, piecesY } = this.props;\n\n    const pieceWidth = width / piecesX;\n    const pieceHeight = height / piecesY;\n    const scale = this.calculateScale(height, width);\n\n    const piecesArray = [];\n    let result = [];\n    const MARGIN = 60 * scale; // px\n    let x = 0;\n    let y = 0;\n    let top = MARGIN;\n    let realWidth = pieceWidth * scale;\n    let realHeight = pieceHeight * scale;\n\n    for (let i = 0; i < piecesX * piecesY; i++) {\n      let left = (i % piecesX) * (realWidth + MARGIN) + MARGIN;\n      left = left === 0 ? MARGIN : left;\n      result.push({\n        id: i + 1,\n        cluster: i + 1,\n        width: pieceWidth,\n        height: pieceHeight,\n        realHeight,\n        realWidth,\n        x,\n        y,\n        url: this.props.imageUrl,\n        scale,\n        pattern: {\n          left: PATTERN.none,\n          top: PATTERN.none,\n          bottom: PATTERN.none,\n          right: PATTERN.none,\n        },\n        neighbours: { left: {}, right: {}, top: {}, bottom: {} },\n        left,\n        top,\n        approX: left,\n        approY: top,\n        beginMouseMove: false,\n      });\n      if ((i + 1) % piecesX === 0) {\n        x = 0;\n        y += pieceHeight;\n        top += realHeight + MARGIN;\n        piecesArray.push(result);\n        result = [];\n        continue;\n      }\n      x += pieceWidth;\n    }\n\n    this.setState({\n      pieces: shufflePuzzle(this.buildPattern(piecesArray)),\n      /* pieces: this.buildPattern(piecesArray)*/\n    });\n  };\n\n  onMove = ({ id, deltaX, deltaY }) => {\n    const pieces = this.state.pieces;\n\n    let [newDeltaX, newDeltaY, newCluster, current] = checkForNeighbours(\n      pieces,\n      id,\n      this.state.clusters,\n      deltaX,\n      deltaY\n    );\n    let res = checkForEdges(\n      pieces,\n      id,\n      newDeltaX,\n      newDeltaY,\n      this.containerRef.current.offsetWidth,\n      window.innerHeight\n    );\n    newDeltaX = res[0];\n    newDeltaY = res[1];\n    let hitEdge = res[2];\n\n    const result = [];\n    for (let i = 0; i < pieces.length; i++) {\n      for (let j = 0; j < pieces[i].length; j++) {\n        const piece = pieces[i][j];\n        if (!result[i]) {\n          result[i] = [];\n        }\n\n        if (piece.cluster === current.cluster) {\n          let left = piece.approX - newDeltaX;\n          let top = piece.approY - newDeltaY;\n\n          result[i][j] = {\n            ...piece,\n            left,\n            top,\n            zIndex: 9999,\n          };\n          continue;\n        }\n\n        result[i][j] = piece;\n      }\n    }\n\n    if (current.cluster !== newCluster) {\n      const members = findPiecesByClusterId(result, current.cluster);\n      members.forEach((p) => {\n        p.cluster = newCluster;\n        p.beginMouseMove = false;\n      });\n    }\n\n    if (hitEdge) {\n      const members = findPiecesByClusterId(result, current.cluster);\n      members.forEach((p) => {\n        p.beginMouseMove = false;\n        p.approX = p.left;\n        p.approY = p.top;\n      });\n    }\n\n    if (this.isWinner()) {\n      if (!this.hasWon) {\n        this.props.onWin();\n        this.hasWon = true;\n      }\n    }\n\n    this.setState({ pieces: result });\n  };\n\n  isWinner = () => {\n    const { pieces } = this.state;\n\n    const prevClusterId = pieces[0][0].cluster;\n    for (let i = 0; i < pieces.length; i++) {\n      for (let j = 0; j < pieces[i].length; j++) {\n        if (i === 0 && j === 0) continue;\n        const piece = pieces[i][j];\n        if (prevClusterId !== piece.cluster) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  };\n\n  onFinishMove = ({ id }) => {\n    const pieces = this.state.pieces;\n    const current = findPieceById(pieces, id);\n\n    const result = [];\n    for (let i = 0; i < pieces.length; i++) {\n      for (let j = 0; j < pieces[i].length; j++) {\n        const piece = pieces[i][j];\n        if (!result[i]) {\n          result[i] = [];\n        }\n\n        if (\n          (piece.cluster === current.cluster && piece.approX !== piece.left) ||\n          piece.approY !== piece.top\n        ) {\n          result[i][j] = {\n            ...piece,\n            approX: piece.left,\n            approY: piece.top,\n            zIndex: ++counter,\n          };\n          continue;\n        }\n\n        result[i][j] = piece;\n      }\n    }\n\n    this.setState({ pieces: result });\n  };\n\n  renderRows = () => {\n    if (isEmpty(this.state.pieces)) {\n      return null;\n    }\n\n    return this.state.pieces.map((piece, i) => (\n      <PuzzleRow key={i}>\n        {piece.map((p, i) =>\n          this.props.render(\n            { piece: p, onMove: this.onMove, onFinishMove: this.onFinishMove },\n            i\n          )\n        )}\n      </PuzzleRow>\n    ));\n  };\n\n  render() {\n    return (\n      <div ref={this.containerRef} className={this.props.className}>\n        <HiddenImg\n          src={this.props.imageUrl}\n          onUpdateDimensions={this.onUpdateDimensions}\n        />\n        {this.renderRows()}\n      </div>\n    );\n  }\n}\n\nexport default styled(Puzzle)`\n  position: relative;\n`;\n","import React, { Component } from 'react';\nimport { HiddenImg } from './Img';\nimport styled from 'styled-components';\nimport { PATTERN } from './Puzzle';\n\nfunction extractPageXY(event) {\n  let pageX = event.pageX;\n  let pageY = event.pageY;\n  if (!pageX) {\n    if (!event.touches) return { pageX: null, pageY: null, success: false }\n    pageX = event.touches[0].pageX;\n    pageY = event.touches[0].pageY;\n  }\n  return { pageX, pageY, success: true }\n}\n\nclass PuzzlePiece extends Component {\n\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n\n    const pattern = this.props.piece.pattern;\n    this.nubCanvasRefs =\n      Object.keys(pattern).filter(key => pattern[key] === PATTERN.nub)\n            .map((key) => ({ direction: key, ref: React.createRef()}));\n  }\n\n  onDocumentMouseMove = (event) => {\n    if (this.props.piece.beginMouseMove) {\n      this.onDrag(event);\n    }\n  }\n\n  componentDidMount(props) {\n    document.body.addEventListener('mousemove', this.onDocumentMouseMove)\n    document.body.addEventListener('touchmove', this.onDocumentMouseMove);\n\n    document.body.addEventListener('mouseup', this.onMouseUp);\n    document.body.addEventListener('touchend', this.onMouseUp);\n  }\n\n  componentWillUnmount() {\n    document.body.removeEventListener('mousemove', this.onDocumentMouseMove)\n    document.body.removeEventListener('touchmove', this.onDocumentMouseMove)\n  }\n\n  onDrag(event) {\n    const { pageX, pageY, success } = extractPageXY(event)\n\n    if (!success) {\n      this.props.piece.beginMouseMove = false;\n      return\n    }\n\n    const deltaX = this.x - pageX;\n    const deltaY = this.y - pageY;\n\n    this.props.onMove({ id: this.props.piece.id, deltaX, deltaY })\n  }\n\n  onMouseDown = (event) => {\n    const { pageX, pageY, success } = extractPageXY(event)\n\n    if (!success) {\n      return\n    }\n\n    this.props.piece.beginMouseMove = true;\n    this.x = pageX;\n    this.y = pageY;\n  }\n\n  onMouseUp = (event) => {\n    const {\n      piece,\n    } = this.props\n    this.props.piece.beginMouseMove = false;\n\n    this.props.onFinishMove({ id: piece.id })\n  }\n\n  onImageLoad = (event) => {\n    const {\n      x,\n      y,\n      width,\n      height,\n      scale,\n      pattern,\n    } = this.props.piece;\n    const canvas = this.canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(\n      event.target,\n      x,\n      y,\n      width,\n      height,\n      0,\n      0,\n      width * scale,\n      height * scale,\n    );\n\n    ctx.globalCompositeOperation = 'destination-out'\n    ctx.beginPath();\n    if (pattern.left === PATTERN.hole) {\n      ctx.arc(width / 12 * scale, height / 2 * scale, height / 6 * scale, 0, 2 * Math.PI);\n    }\n    ctx.stroke();\n    ctx.fill();\n    ctx.beginPath();\n    if (pattern.right === PATTERN.hole) {\n      ctx.arc((width - width / 12) * scale, height / 2 * scale, height / 6 * scale, 0, 2 * Math.PI);\n    }\n    ctx.stroke();\n    ctx.fill();\n    ctx.beginPath();\n    if (pattern.top === PATTERN.hole) {\n      ctx.arc(width / 2 * scale, height / 12 * scale, height / 6 * scale, 0, 2 * Math.PI);\n    }\n    ctx.stroke();\n    ctx.fill();\n    ctx.beginPath();\n    if (pattern.bottom === PATTERN.hole) {\n      ctx.arc(width / 2 * scale, (height - height / 12) * scale, height / 6 * scale, 0, 2 * Math.PI);\n    }\n    ctx.stroke();\n    ctx.fill();\n\n    this.drawNubs(event.target);\n  }\n\n  drawNubs(image) {\n    const {\n      x,\n      y,\n      width,\n      height,\n      scale,\n      pattern,\n    } = this.props.piece;\n\n    this.nubCanvasRefs.forEach((obj) => {\n      const canvas = obj.ref.current;\n      let ctx = canvas.getContext('2d');\n\n      if (obj.direction === \"right\" && pattern[obj.direction] === PATTERN.nub) {\n        let w = width / 3 * scale;\n        let h = height / 3 * scale;\n        canvas.height = h;\n        canvas.width = w;\n        canvas.style = `position: absolute; top: ${h}px`;\n        ctx.beginPath();\n        ctx.arc(w / 4, h / 2, h / 2, 0, 2 * Math.PI);\n        ctx.clip();\n\n        w = w / scale;\n        h = h / scale;\n        ctx.drawImage(\n          image,\n          x + width,\n          y + h,\n          w,\n          h,\n          0,\n          0,\n          w * scale,\n          h * scale\n        );\n      }\n\n      if (obj.direction === \"left\" && pattern[obj.direction] === PATTERN.nub) {\n        let w = width / 3 * scale;\n        let h = height / 3 * scale;\n        canvas.height = h;\n        canvas.width = w;\n        canvas.style = `position: absolute; top: ${h}px; left: -${w}px`;\n        ctx.beginPath();\n        ctx.arc(w / 2 + w / 4, h / 2, h / 2, 0, 2 * Math.PI);\n        ctx.clip();\n\n        w = w / scale;\n        h = h / scale;\n        ctx.drawImage(\n          image,\n          x - w,\n          y + h,\n          w,\n          h,\n          0,\n          0,\n          w * scale,\n          h * scale\n        );\n      }\n\n      if (obj.direction === \"bottom\" && pattern[obj.direction] === PATTERN.nub) {\n        let w = width / 3 * scale;\n        let h = height / 3 * scale;\n        canvas.height = h;\n        canvas.width = w;\n        canvas.style = `position: absolute; top: ${height * scale}px; right: ${width * scale / 2 - w / 2}px`;\n        ctx.beginPath();\n        ctx.arc(w / 2, h / 4, h / 2, 0, 2 * Math.PI);\n        ctx.clip();\n\n        w = w / scale;\n        h = h / scale;\n        ctx.drawImage(\n          image,\n          x + w,\n          y + height,\n          w,\n          h,\n          0,\n          0,\n          w * scale,\n          h * scale\n        );\n      }\n\n\n      if (obj.direction === \"top\" && pattern[obj.direction] === PATTERN.nub) {\n        let w = width / 3 * scale;\n        let h = height / 3 * scale;\n        canvas.height = h;\n        canvas.width = w;\n        canvas.style = `position: absolute; top: -${h}px; right: ${width * scale / 2 - w / 2}px`;\n        ctx.beginPath();\n        ctx.arc(w / 2, h / 4 + h / 2, h / 2, 0, 2 * Math.PI);\n        ctx.clip();\n\n        w = w / scale;\n        h = h / scale;\n        ctx.drawImage(\n          image,\n          x + w,\n          y - h,\n          w,\n          h,\n          0,\n          0,\n          w * scale,\n          h * scale\n        );\n      }\n    });\n  }\n\n  render() {\n    const {\n      left,\n      top,\n      url,\n      realWidth,\n      realHeight,\n      zIndex,\n    } = this.props.piece\n\n    return (\n      <div className={this.props.className} onMouseDown={this.onMouseDown} style={{ left, top, zIndex }} onTouchStart={this.onMouseDown}>\n        <canvas ref={this.canvasRef} width={realWidth} height={realHeight} />\n        {this.nubCanvasRefs.map((ref, i) => <canvas ref={ref.ref} key={i} />)}\n        <HiddenImg src={url} onLoad={this.onImageLoad} />\n      </div>\n    );\n  }\n}\n\nexport default styled(PuzzlePiece)`\n  position: absolute;\n  cursor: pointer;\n  user-select: none;\n`\n","import React, { Component } from \"react\";\nimport Board from \"./components/Board\";\nimport Puzzle from \"./components/Puzzle\";\nimport PuzzlePiece from \"./components/PuzzlePiece\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  Link,\n} from \"react-router-dom\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      imageUrl: \"https://i.ytimg.com/vi/jMVwRZGH58I/maxresdefault.jpg\",\n      hasStartedGame: false,\n      difficulty: 3,\n      hasWon: false,\n    };\n  }\n\n  onStartGame = (event) => {\n    this.setState({\n      hasStartedGame: true,\n    });\n    event.preventDefault();\n  };\n\n  handleUrlChange = (event) => {\n    this.setState({ imageUrl: event.target.value });\n  };\n\n  handleDifficultyChange = (event) => {\n    this.setState({ difficulty: event.target.value });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Route path=\"/\">\n            <Redirect to=\"/start\" />\n          </Route>\n          <Switch>\n            <Route path=\"/start\">\n              <div className=\"start-game\">\n                <form onSubmit={this.onStartGame}>\n                  <label>\n                    Picture URL:\n                    <input\n                      type=\"text\"\n                      value={this.state.imageUrl}\n                      onChange={this.handleUrlChange}\n                    />\n                  </label>\n                  <br />\n                  <label>\n                    Select difficulty:\n                    <select\n                      value={this.state.difficulty}\n                      onChange={this.handleDifficultyChange}\n                    >\n                      <option value={2}>2X2</option>\n                      <option value={3}>3X3</option>\n                      <option value={4}>4X4</option>\n                      <option value={6}>6X6</option>\n                      <option value={7}>8X8</option>\n                    </select>\n                  </label>\n                  <br />\n                  <button>Start Game</button>\n                </form>\n              </div>\n              {this.state.hasStartedGame ? (\n                <Redirect to=\"/game\" />\n              ) : (\n                <Redirect to=\"/start\" />\n              )}\n            </Route>\n            <Route path=\"/game\">\n              <Board>\n                <Puzzle\n                  imageUrl={this.state.imageUrl}\n                  piecesX={this.state.difficulty}\n                  piecesY={this.state.difficulty}\n                  render={({ piece, onMove, onFinishMove }, i) => (\n                    <PuzzlePiece\n                      key={i}\n                      piece={piece}\n                      onMove={onMove}\n                      onFinishMove={onFinishMove}\n                    />\n                  )}\n                  onWin={this.onWin}\n                />\n              </Board>\n              {this.state.hasWon ? <Redirect to=\"/end\" /> : null}\n            </Route>\n            <Route path=\"/end\">\n              <div className=\"end-game\">\n                <div>\n                  <div>Congragulations! You completed the puzzle.</div>\n                  <div className=\"play-again-link\">\n                    <Link onClick={this.playAgain} to=\"/start\">\n                      Play again\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n\n  playAgain = () => {\n    this.setState({\n      hasStartedGame: false,\n    });\n  };\n\n  onWin = () => {\n    this.setState({\n      hasWon: true,\n      hasStartedGame: false,\n    });\n  };\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}